services:
  mixpost:
    image: inovector/mixpost-pro-team:latest
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.mixpost.rule=Host(`${APP_DOMAIN}`)
      - traefik.http.routers.mixpost.tls=true
      - traefik.http.routers.mixpost.tls.certresolver=mytlschallenge
      # Remove SSLRedirect or web->websecure redirection labels
      # - traefik.http.middlewares.mixpost.headers.SSLRedirect=true
      - traefik.http.middlewares.mixpost.headers.STSSeconds=315360000
      - traefik.http.middlewares.mixpost.headers.browserXSSFilter=true
      - traefik.http.middlewares.mixpost.headers.contentTypeNosniff=true
      - traefik.http.middlewares.mixpost.headers.forceSTSHeader=true
      - traefik.http.middlewares.mixpost.headers.SSLHost=`${APP_DOMAIN}`
      - traefik.http.middlewares.mixpost.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.mixpost.headers.STSPreload=true
      - traefik.http.routers.mixpost.middlewares=mixpost@docker
    volumes:
      - storage:/var/www/html/storage/app
    depends_on:
      - mysql
      - redis
    restart: unless-stopped

  mysql:
    image: 'mysql/mysql-server:8.0'
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - 'mysql:/var/lib/mysql'
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p ${DB_PASSWORD}"]
      retries: 3
      timeout: 5s
    restart: unless-stopped

  redis:
    image: 'redis:latest'
    command: redis-server --appendonly yes --replica-read-only no
    volumes:
      - 'redis:/data'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s
    restart: unless-stopped  

volumes:
  mysql:
    driver: local
  redis:
    driver: local
  storage:
    driver: local
